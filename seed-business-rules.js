const axios = require('axios');

// Mock business rules data
const mockRules = [
  // MDM Business Rules Matrix Rules - Customer Domain
  {
    id: "MDM001",
    name: "Email Format Validation",
    description: "Validate email format using standard regex pattern",
    type: "validation",
    dataObject: "customer",
    status: "active",
    version: "1.0.0",
    createdBy: "John Doe",
    tags: ["email", "validation", "customer", "regex"],
    priority: 1,
    enabled: true,
    isActive: true,
    executionCount: 2340,
    successCount: 2320,
    failureCount: 20,
    regexPattern: "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$",
    conditions: [
      {
        id: 1,
        field: "email",
        operator: "regex",
        value: "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$",
        logicalOperator: "AND"
      }
    ],
    actions: [
      {
        id: 1,
        type: "validate",
        field: "email",
        message: "Email format is invalid"
      }
    ]
  },
  {
    id: "MDM002",
    name: "VAT/Tax ID Check",
    description: "Validate VAT/Tax ID format based on country",
    type: "validation",
    dataObject: "customer",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-16T11:00:00Z",
    modifiedBy: "Jane Smith",
    createdDate: "2024-01-16T10:00:00Z",
    createdBy: "Jane Smith",
    tags: ["vat", "validation", "customer", "tax"],
    complexity: "medium",
    executionCount: 1890,
    successRate: 97.8,
    avgExecutionTime: "25ms",
    rule: "VAT ID must be valid for the specified country",
    example: "GB123456789",
  },
  {
    id: "MDM003",
    name: "Title Case Names",
    description: "Convert customer names to proper title case",
    type: "standardization",
    dataObject: "customer",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-17T12:00:00Z",
    modifiedBy: "Mike Johnson",
    createdDate: "2024-01-17T11:00:00Z",
    createdBy: "Mike Johnson",
    tags: ["standardization", "customer", "names"],
    complexity: "low",
    executionCount: 1456,
    successRate: 100,
    avgExecutionTime: "8ms",
    rule: "Convert to Title Case format",
    example: "john smith → John Smith",
  },
  {
    id: "MDM004",
    name: "Company Registration Number",
    description: "Validate company registration number format",
    type: "validation",
    dataObject: "supplier",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-18T13:00:00Z",
    modifiedBy: "Sarah Wilson",
    createdDate: "2024-01-18T12:00:00Z",
    createdBy: "Sarah Wilson",
    tags: ["validation", "supplier", "registration"],
    complexity: "medium",
    executionCount: 1123,
    successRate: 96.5,
    avgExecutionTime: "18ms",
    rule: "Must be valid registration number for country",
    example: "12345678 (UK) or 12-3456789 (US)",
  },
  {
    id: "MDM005",
    name: "Base UoM Mandatory",
    description: "Base unit of measure is required",
    type: "validation",
    dataObject: "material",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-19T14:00:00Z",
    modifiedBy: "David Brown",
    createdDate: "2024-01-19T13:00:00Z",
    createdBy: "David Brown",
    tags: ["validation", "material", "uom"],
    complexity: "low",
    executionCount: 3456,
    successRate: 99.8,
    avgExecutionTime: "5ms",
    rule: "Base UoM is mandatory field",
    example: "EA, KG, L, M, etc.",
  },
  {
    id: "MDM006",
    name: "Postcode Format",
    description: "Validate postcode format based on country",
    type: "validation",
    dataObject: "location",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-20T15:00:00Z",
    modifiedBy: "Lisa Davis",
    createdDate: "2024-01-20T14:00:00Z",
    createdBy: "Lisa Davis",
    tags: ["validation", "location", "postcode"],
    complexity: "medium",
    executionCount: 2789,
    successRate: 98.1,
    avgExecutionTime: "22ms",
    rule: "Postcode must match country-specific format",
    example: "SW1A 1AA (UK) or 12345 (US)",
  },
  // Technical Rule Types
  {
    id: "TECH001",
    name: "Email RegEx Pattern",
    description: "Regular expression pattern for email validation",
    type: "regex",
    dataObject: "customer",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-21T16:00:00Z",
    modifiedBy: "Tech Team",
    createdDate: "2024-01-21T15:00:00Z",
    createdBy: "Tech Team",
    tags: ["regex", "email", "pattern"],
    complexity: "medium",
    executionCount: 4567,
    successRate: 99.5,
    avgExecutionTime: "3ms",
    rule: "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$",
    example: "test@example.com",
  },
  {
    id: "TECH002",
    name: "Material Classification Check Table",
    description: "Check table for material classification validation",
    type: "check",
    dataObject: "material",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-22T17:00:00Z",
    modifiedBy: "Tech Team",
    createdDate: "2024-01-22T16:00:00Z",
    createdBy: "Tech Team",
    tags: ["check-table", "material", "classification"],
    complexity: "high",
    executionCount: 890,
    successRate: 95.2,
    avgExecutionTime: "45ms",
    rule: "Lookup material type against classification table",
    example: "Raw Material → Manufacturing",
  },
  {
    id: "TECH003",
    name: "Customer Credit Decision Table",
    description: "Decision table for customer credit approval",
    type: "decision",
    dataObject: "customer",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-23T18:00:00Z",
    modifiedBy: "Business Team",
    createdDate: "2024-01-23T17:00:00Z",
    createdBy: "Business Team",
    tags: ["decision-table", "customer", "credit"],
    complexity: "high",
    executionCount: 1234,
    successRate: 97.3,
    avgExecutionTime: "67ms",
    rule: "Multi-condition decision table for credit approval",
    example: "Credit Score > 700 AND Order Value < 10000 → Approve",
  },
  // Legacy rules
  {
    id: "BR001",
    name: "Customer Credit Limit Validation",
    description: "Validates customer credit limits based on payment history and order value",
    type: "validation",
    dataObject: "customer",
    status: "published",
    version: "1.2",
    lastModified: "2025-01-27T14:30:00Z",
    modifiedBy: "John Doe",
    createdDate: "2025-01-15T09:00:00Z",
    createdBy: "Jane Smith",
    tags: ["credit", "validation", "customer"],
    complexity: "medium",
    executionCount: 1250,
    successRate: 98.5,
    avgExecutionTime: "45ms",
  },
  {
    id: "BR002",
    name: "Order Discount Calculation",
    description: "Calculates order discounts based on customer tier, order value, and promotional codes",
    type: "derivation",
    dataObject: "customer",
    status: "draft",
    version: "2.0",
    lastModified: "2025-01-26T16:45:00Z",
    modifiedBy: "Jane Smith",
    createdDate: "2025-01-20T10:30:00Z",
    createdBy: "Mike Johnson",
    tags: ["discount", "calculation", "pricing"],
    complexity: "high",
    executionCount: 0,
    successRate: 0,
    avgExecutionTime: "0ms",
  },
  {
    id: "BR003",
    name: "Inventory Reorder Decision",
    description: "Determines when to reorder inventory based on stock levels, demand patterns, and supplier lead times",
    type: "decision",
    dataObject: "material",
    status: "review",
    version: "1.5",
    lastModified: "2025-01-25T11:20:00Z",
    modifiedBy: "Mike Johnson",
    createdDate: "2025-01-10T14:15:00Z",
    createdBy: "Sarah Wilson",
    tags: ["inventory", "reorder", "supply-chain"],
    complexity: "high",
    executionCount: 850,
    successRate: 96.2,
    avgExecutionTime: "120ms",
  },
  {
    id: "BR004",
    name: "Product Price Validation",
    description: "Validates product prices against minimum and maximum thresholds",
    type: "validation",
    status: "published",
    version: "1.0",
    dataObject: "material",
    lastModified: "2025-01-22T08:15:00Z",
    modifiedBy: "Sarah Wilson",
    createdDate: "2025-01-05T16:45:00Z",
    createdBy: "John Doe",
    tags: ["price", "validation", "product"],
    complexity: "low",
    executionCount: 2100,
    successRate: 99.1,
    avgExecutionTime: "25ms",
  },
  {
    id: "BR005",
    name: "Customer Tier Assignment",
    description: "Assigns customer tiers based on purchase history and account value",
    type: "derivation",
    status: "archived",
    version: "0.9",
    dataObject: "customer",
    lastModified: "2025-01-18T13:30:00Z",
    modifiedBy: "John Doe",
    createdDate: "2024-12-28T11:00:00Z",
    createdBy: "Jane Smith",
    tags: ["customer", "tier", "assignment"],
    complexity: "medium",
    executionCount: 3200,
    successRate: 97.8,
    avgExecutionTime: "65ms",
  },
  // Additional MDM Business Rules Matrix Rules
  {
    id: "MDM007",
    name: "VAT ID Mandatory",
    description: "VAT ID is required for all suppliers",
    type: "validation",
    dataObject: "supplier",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-21T16:00:00Z",
    modifiedBy: "David Brown",
    createdDate: "2024-01-21T15:00:00Z",
    createdBy: "David Brown",
    tags: ["vat", "validation", "supplier", "mandatory"],
    complexity: "low",
    executionCount: 1200,
    successRate: 98.8,
    avgExecutionTime: "10ms",
    rule: "VAT ID is mandatory field",
    example: "GB123456789",
  },
  {
    id: "MDM008",
    name: "HS Code Valid",
    description: "Validate HS code format and validity",
    type: "validation",
    dataObject: "material",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-22T17:00:00Z",
    modifiedBy: "Robert Lee",
    createdDate: "2024-01-22T16:00:00Z",
    createdBy: "Robert Lee",
    tags: ["hs", "validation", "material", "classification"],
    complexity: "high",
    executionCount: 1800,
    successRate: 95.2,
    avgExecutionTime: "45ms",
    rule: "HS code must be 6-10 digits and valid",
    example: "1234.56.78",
  },
  {
    id: "MDM009",
    name: "Country Code ISO 2-digit",
    description: "Validate ISO 2-digit country code",
    type: "validation",
    dataObject: "location",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-23T18:00:00Z",
    modifiedBy: "James Wilson",
    createdDate: "2024-01-23T17:00:00Z",
    createdBy: "James Wilson",
    tags: ["country", "validation", "location", "iso"],
    complexity: "low",
    executionCount: 1950,
    successRate: 99.8,
    avgExecutionTime: "5ms",
    rule: "Must be valid ISO 3166-1 alpha-2 code",
    example: "GB, US, DE, FR, etc.",
  },
  {
    id: "MDM010",
    name: "Title Case Names",
    description: "Convert customer names to proper title case",
    type: "standardization",
    dataObject: "customer",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-24T19:00:00Z",
    modifiedBy: "Anna Taylor",
    createdDate: "2024-01-24T18:00:00Z",
    createdBy: "Anna Taylor",
    tags: ["standardization", "customer", "names", "formatting"],
    complexity: "low",
    executionCount: 1456,
    successRate: 100,
    avgExecutionTime: "8ms",
    rule: "Convert to Title Case format",
    example: "john smith → John Smith",
  },
  {
    id: "MDM011",
    name: "Phone Formatting",
    description: "Standardize phone number format",
    type: "standardization",
    dataObject: "customer",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-25T20:00:00Z",
    modifiedBy: "Chris Anderson",
    createdDate: "2024-01-25T19:00:00Z",
    createdBy: "Chris Anderson",
    tags: ["standardization", "customer", "phone", "formatting"],
    complexity: "medium",
    executionCount: 1200,
    successRate: 98.5,
    avgExecutionTime: "15ms",
    rule: "Format as: +XX XXX XXX XXXX",
    example: "1234567890 → +1 234 567 890",
  },
  {
    id: "MDM012",
    name: "Bank Account/IBAN Formatting",
    description: "Standardize bank account and IBAN formats",
    type: "standardization",
    dataObject: "supplier",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-26T21:00:00Z",
    modifiedBy: "Emma Davis",
    createdDate: "2024-01-26T20:00:00Z",
    createdBy: "Emma Davis",
    tags: ["standardization", "supplier", "bank", "iban"],
    complexity: "high",
    executionCount: 800,
    successRate: 96.8,
    avgExecutionTime: "35ms",
    rule: "Format IBAN: XX XX XXXX XXXX XXXX XXXX XX",
    example: "GB29 NWBK 6016 1331 9268 19",
  },
  {
    id: "MDM013",
    name: "UoM Conversions (kg/lbs)",
    description: "Standardize unit conversions",
    type: "standardization",
    dataObject: "material",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-27T22:00:00Z",
    modifiedBy: "Tom Miller",
    createdDate: "2024-01-27T21:00:00Z",
    createdBy: "Tom Miller",
    tags: ["standardization", "material", "uom", "conversion"],
    complexity: "medium",
    executionCount: 1100,
    successRate: 99.2,
    avgExecutionTime: "12ms",
    rule: "Convert to base unit: 1 kg = 2.20462 lbs",
    example: "100 lbs → 45.36 kg",
  },
  {
    id: "MDM014",
    name: "Address Formatting",
    description: "Standardize address format",
    type: "standardization",
    dataObject: "location",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-28T23:00:00Z",
    modifiedBy: "Sophie White",
    createdDate: "2024-01-28T22:00:00Z",
    createdBy: "Sophie White",
    tags: ["standardization", "location", "address", "formatting"],
    complexity: "medium",
    executionCount: 1300,
    successRate: 97.8,
    avgExecutionTime: "18ms",
    rule: "Format: Street, City, State/Province, Postcode, Country",
    example: "123 Main St, London, England, SW1A 1AA, GB",
  },
  {
    id: "MDM015",
    name: "Region from Country",
    description: "Derive region based on country code",
    type: "derivation",
    dataObject: "customer",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-29T10:00:00Z",
    modifiedBy: "Alex Johnson",
    createdDate: "2024-01-29T09:00:00Z",
    createdBy: "Alex Johnson",
    tags: ["derivation", "customer", "region", "country"],
    complexity: "low",
    executionCount: 1800,
    successRate: 99.9,
    avgExecutionTime: "6ms",
    rule: 'If country = "US" then region = "North America"',
    example: "US → North America",
  },
  {
    id: "MDM016",
    name: "Customer Segment Derivation",
    description: "Assign customer segment based on order value",
    type: "derivation",
    dataObject: "customer",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-30T11:00:00Z",
    modifiedBy: "Rachel Green",
    createdDate: "2024-01-30T10:00:00Z",
    createdBy: "Rachel Green",
    tags: ["derivation", "customer", "segment", "value"],
    complexity: "medium",
    executionCount: 950,
    successRate: 98.7,
    avgExecutionTime: "20ms",
    rule: 'If total_orders > 10000 then segment = "Premium"',
    example: "High value → Premium segment",
  },
  {
    id: "MDM017",
    name: "Risk Rating from Credit Score",
    description: "Calculate risk rating based on credit score",
    type: "derivation",
    dataObject: "supplier",
    status: "published",
    version: "1.0",
    lastModified: "2024-01-31T12:00:00Z",
    modifiedBy: "Kevin Brown",
    createdDate: "2024-01-31T11:00:00Z",
    createdBy: "Kevin Brown",
    tags: ["derivation", "supplier", "risk", "credit"],
    complexity: "medium",
    executionCount: 750,
    successRate: 99.1,
    avgExecutionTime: "16ms",
    rule: 'If credit_score > 700 then risk = "Low"',
    example: "Credit Score 750 → Low Risk",
  },
  {
    id: "MDM018",
    name: "Material Group from HS Code",
    description: "Derive material group from HS code",
    type: "derivation",
    dataObject: "material",
    status: "published",
    version: "1.0",
    lastModified: "2024-02-01T13:00:00Z",
    modifiedBy: "Laura Wilson",
    createdDate: "2024-02-01T12:00:00Z",
    createdBy: "Laura Wilson",
    tags: ["derivation", "material", "group", "hs"],
    complexity: "high",
    executionCount: 1400,
    successRate: 96.3,
    avgExecutionTime: "28ms",
    rule: 'HS code 1234.56 → Material Group "Fasteners"',
    example: "HS 7318.15 → Fasteners Group",
  },
  {
    id: "MDM019",
    name: "Region from Postal Code",
    description: "Derive region from postal code",
    type: "derivation",
    dataObject: "location",
    status: "published",
    version: "1.0",
    lastModified: "2024-02-02T14:00:00Z",
    modifiedBy: "Mark Thompson",
    createdDate: "2024-02-02T13:00:00Z",
    createdBy: "Mark Thompson",
    tags: ["derivation", "location", "region", "postal"],
    complexity: "medium",
    executionCount: 1600,
    successRate: 98.4,
    avgExecutionTime: "14ms",
    rule: 'Postcode SW1A → Region "London"',
    example: "SW1A 1AA → London, England",
  },
  {
    id: "MDM020",
    name: "GDPR Rules",
    description: "Ensure GDPR compliance for contact info",
    type: "compliance",
    dataObject: "customer",
    status: "published",
    version: "1.0",
    lastModified: "2024-02-03T15:00:00Z",
    modifiedBy: "Sarah Connor",
    createdDate: "2024-02-03T14:00:00Z",
    createdBy: "Sarah Connor",
    tags: ["compliance", "customer", "gdpr", "privacy"],
    complexity: "high",
    executionCount: 2200,
    successRate: 99.7,
    avgExecutionTime: "32ms",
    rule: "Consent required for personal data processing",
    example: "Explicit consent for marketing",
  },
  {
    id: "MDM021",
    name: "Sanction List Check",
    description: "Check supplier against sanction lists",
    type: "compliance",
    dataObject: "supplier",
    status: "published",
    version: "1.0",
    lastModified: "2024-02-04T16:00:00Z",
    modifiedBy: "John Smith",
    createdDate: "2024-02-04T15:00:00Z",
    createdBy: "John Smith",
    tags: ["compliance", "supplier", "sanction", "ofac"],
    complexity: "high",
    executionCount: 1100,
    successRate: 97.2,
    avgExecutionTime: "55ms",
    rule: "Must not be on OFAC, EU, or UN lists",
    example: "Clean - not on any lists",
  },
  {
    id: "MDM022",
    name: "Customs Compliance",
    description: "Ensure customs compliance for HS code and origin",
    type: "compliance",
    dataObject: "material",
    status: "published",
    version: "1.0",
    lastModified: "2024-02-05T17:00:00Z",
    modifiedBy: "Mike Johnson",
    createdDate: "2024-02-05T16:00:00Z",
    createdBy: "Mike Johnson",
    tags: ["compliance", "material", "customs", "hs"],
    complexity: "high",
    executionCount: 1800,
    successRate: 95.8,
    avgExecutionTime: "42ms",
    rule: "HS code and origin country must be valid",
    example: "Valid HS code and origin country",
  },
  {
    id: "MDM023",
    name: "Safety & Zoning Compliance",
    description: "Ensure safety and zoning compliance",
    type: "compliance",
    dataObject: "location",
    status: "published",
    version: "1.0",
    lastModified: "2024-02-06T18:00:00Z",
    modifiedBy: "Lisa Garcia",
    createdDate: "2024-02-06T17:00:00Z",
    createdBy: "Lisa Garcia",
    tags: ["compliance", "location", "safety", "zoning"],
    complexity: "medium",
    executionCount: 900,
    successRate: 98.9,
    avgExecutionTime: "25ms",
    rule: "Location must comply with safety and zoning regulations",
    example: "Compliant with local safety regulations",
  },
];

// Function to seed business rules
async function seedBusinessRules() {
  const baseURL = 'http://localhost:3001/api/business-rules';
  let successCount = 0;
  let errorCount = 0;
  const errors = [];

  console.log('🌱 Starting to seed business rules...\n');

  for (let i = 0; i < mockRules.length; i++) {
    const rule = mockRules[i];
    
    try {
      console.log(`📝 Creating rule ${i + 1}/${mockRules.length}: ${rule.name} (${rule.id})`);
      
      const response = await axios.post(baseURL, rule);
      
      if (response.data.success) {
        console.log(`   ✅ Success: ${rule.name}`);
        successCount++;
      } else {
        console.log(`   ❌ API Error: ${response.data.message}`);
        errorCount++;
        errors.push({
          rule: rule.name,
          id: rule.id,
          error: response.data.message
        });
      }
      
      // Add a small delay to avoid overwhelming the server
      await new Promise(resolve => setTimeout(resolve, 100));
      
    } catch (error) {
      console.log(`   ❌ Network Error: ${error.message}`);
      errorCount++;
      errors.push({
        rule: rule.name,
        id: rule.id,
        error: error.message
      });
    }
  }

  console.log('\n📊 Seeding Summary:');
  console.log(`   ✅ Successfully created: ${successCount} rules`);
  console.log(`   ❌ Failed to create: ${errorCount} rules`);
  
  if (errors.length > 0) {
    console.log('\n❌ Errors encountered:');
    errors.forEach((error, index) => {
      console.log(`   ${index + 1}. ${error.rule} (${error.id}): ${error.error}`);
    });
  }

  console.log('\n🎉 Business rules seeding completed!');
}

// Run the seeding function
seedBusinessRules().catch(error => {
  console.error('💥 Fatal error during seeding:', error.message);
  process.exit(1);
});
